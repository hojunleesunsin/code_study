- 트리란?
노드와 에지로 연결된 그래프의 특수한 형태
* 그래프의 표현으로도 트리를 표현할 수 있다.

트리의 특징
1. 순환 구조를 지니고 있지 않고, 1개의 루트 노드가 존재한다.
2. 루트 노드를 제외한 노드는 단 1개의 부모 노드를 갖는다.
3. 트리의 부분 트리 역시 트리의 모든 특징을 따른다.

트리의 구성 요소
노드: 데이터의 index와 value를 표현하는 요소
에지: 노드와 노드의 연결 관계를 나타내는 선
루트 노드: 트리에서 가장 상위에 존재하는 노드
부모 노드: 두 노드 사이의 관계에서 상위 노드에 해당하는 노드
자식 노드: 두 노드 사이의 관계에서 하위 노드에 해당하는 노드
리프 노드: 트리에서 가장 하위에 존재하는 노드(자식 노드가 없는 노드)
서브 트리: 전체 트리에 속한 작은 트리

트리의 문제 유형
1. 그래프로 푸는 트리: node와 edge는 인접 리스트로 표현가능 -> DFS, BFS
2. 트리만을 위한 문제: 이진 트리, 세그먼트 트리(index tree), LCA(최소공통조상)
세그먼트 트리, LCA는 1차원 배열로 트리를 표현할 수 있는것.


- 이진 트리란?
각 노드의 자식 노드의 개수가 2 이하로 구성된 트리를 말한다.
** 트리 영역에서 가장 많이 사용되는 형태이다. **
이진 트리의 종류
편향 이진 트리: 노드들이 한쪽으로 편향돼 생성된 이진트리
포화 이진 트리: 트리의 높이가 모두 일정하며 리프 노드가 꽉 찬 이진 트리
완전 이진 트리: 마지막 레벨을 제외하고 완전하게 노드들이 채워져 있고, 
마지막 레벨은 왼쪽부터 채워진 트리


- 세그먼트 트리란?
주어진 데이터의 구간 합과 데이터 업데이트를 빠르게 수행하기 위해 고안해낸
자료구조의 형태, 더 큰 범위는 '인덱스 트리'라고 불린다.
세그먼트 트리의 종류
구간 합, 최대/최소 구하기

세그먼트 트리 구현 단계
1. 트리 초기화하기
트리 배열의 크기 구하는 방법: 
2^k >= N을 만족하는 k의 최솟값을 구한후 2^k * 2를 트리 배열의 크기로 정의.

리프노드에 원본 데이터를 입력, 시작 인덱스는 2^k

구간합 = A[N] = A[2N] + A[2N + 1]
최대 = A[N] = max(A[2N], A[2N + 1])
최소 = A[N] = min(A[2N], A[2N + 1])

2. 질의값 구하기(구간 합 or 최대/최소)
- 질의 인덱스를 세그먼트 트리 인덱스로 변경하는 방법
세그먼트 트리 index = 주어진 질의 index + 2^k -1

질의값 구하는 과정
1. start_index % 2 == 1일 때 해당 노드를 선택한다.
2. end_index % 2 == 0일 때 해당 노드를 선택한다.
3. start_index depth 변경: start_index = (start_index + 1) / 2 연산을 실행한다.
4. end_index depth 변경: end_index = (end_index - 1) / 2 연산을 수행한다.
5. 1~4번을 반복하다가 end_index < start_index가 되면 종료한다.

3. 데이터 업데이트하기
구간합: 구간합 데이터 업데이트는 부모 노드로 올라가며 업데이트 시켜주면 된다.
최대: 업데이트한 노드와 다른 자식 노드를 비교하여 더 큰 수를 부모 노드 업데이트 시켜주면 된다.
최소: 업데이트한 노드와 다른 자식 노드를 비교하여 더 작은 수를 부모 노드 업데이트 시켜주면 된다.

** 최대/최소는 업데이트된 노드보다 다른 자식 노드를 비교하였을 때
다른 자식 노드가 더 크거나 작으면 즉시 종료. **


- 최소 공통 조상(LCA)이란?
트리 그래프에서 임의의 두 노드를 선택했을 때 두 노드가 각각 자신을 포함해 거슬러 올라가면서 
부모노드를 탐색할 때 처음 공통으로 만나게 되는 부모 노드를 최소 공통 조상이라고 한다.

LCA 찾는법에는 일반적인 방법과 빠르게 찾는법이 있다.

빠르게 찾는법, 부모 노드 배열의 점화식
=>      p[K][N] = P[K-1][P[K-1][N]]